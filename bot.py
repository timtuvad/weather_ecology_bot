from telegram.ext.updater import Updater
from telegram.update import Update
from telegram.ext.callbackcontext import CallbackContext
from telegram.ext import CallbackQueryHandler
from telegram.ext.commandhandler import CommandHandler
from telegram.ext.messagehandler import MessageHandler
from telegram.ext.filters import Filters
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from random import randrange
import json, requests, sys, time
import sqlite3

updater = Updater("5449824704:AAGEC-7JT5qIraxTNfl96x3ImDoxAvkHob0",
                  use_context=True)
bot = updater.bot

app_id = '8931547825081ff1a3789851aab073d2'

weather_smiles = {'01': '‚òÄ',
                  '02': 'üå§',
                  '03': '‚òÅÔ∏è',
                  '04': '‚òÅÔ∏è',
                  '09': 'üåß',
                  '10': 'üå¶',
                  '11': '‚õà',
                  '13': '‚ùÑÔ∏è',
                  '50': 'üå´'}

facts_ru = [
'–ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—è ‚Äï —Å–∞–º–∞—è –º–æ–ª–æ–¥–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–∞—É–∫–∞. –í–º–µ—Å—Ç–µ —Å —Ç–µ–º, –ø–µ—Ä–≤—ã–µ –ø—Ä–æ–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã –ª—é–¥–∏ –Ω–∞—É—á–∏–ª–∏—Å—å –¥–µ–ª–∞—Ç—å –µ—â–µ –≤ –î—Ä–µ–≤–Ω–µ–π –ì—Ä–µ—Ü–∏–∏. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –∂–µ–Ω–∞ –°–æ–∫—Ä–∞—Ç–∞ –æ–±–ª–∞–¥–∞–ª–∞ —Å–≤–∞—Ä–ª–∏–≤—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º. –û–¥–Ω–∞–∂–¥—ã –æ–Ω–∞ —Ç–∞–∫ –¥–æ—Å—Ç–∞–ª–∞ —Å—É–ø—Ä—É–≥–∞, —á—Ç–æ —Ç–æ—Ç –≤—ã—à–µ–ª –∏–∑ –¥–æ–º–∞ –∏ —Å–µ–ª –Ω–∞ –ø–æ—Ä–æ–≥, –≤–∑—è–≤—à–∏—Å—å –∑–∞ –≥–æ–ª–æ–≤—É. –¢–æ–≥–¥–∞ –æ–Ω–∞ –≤—ã–ª–∏–ª–∞ –Ω–∞ –Ω–µ–≥–æ –≤–µ–¥—Ä–æ –≤–æ–¥—ã. ¬´–ü–æ—Å–ª–µ –≥—Ä–æ–º–∞ –≤—Å–µ–≥–¥–∞ —Å–ª–µ–¥—É–µ—Ç –¥–æ–∂–¥—å!¬ª ‚Äï –≤–æ—Å–∫–ª–∏–∫–Ω—É–ª —Ñ–∏–ª–æ—Å–æ—Ñ',
'–õ—é–¥–∏ –ø–æ-—Ä–∞–∑–Ω–æ–º—É –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é—Ç –ø–æ–≥–æ–¥—É. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Å–∏–ª—å–Ω—ã–µ –ª–∏—á–Ω–æ—Å—Ç–∏, –ø–æ–¥–≤–µ—Ä–∂–µ–Ω—ã –º–µ—Ç–µ–æ–ø–∞—Ç–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –ù–∞–ø–æ–ª–µ–æ–Ω, –ø—Ä–∏ –≤—Å–µ–π —Å–≤–æ–µ–π —ç–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç–∏, –≤ –Ω–µ–ø–æ–≥–æ–¥—É —Ç–µ—Ä—è–ª —Å–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ, —Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –≤—è–ª—ã–º –∏ –ø–æ–¥–∞–≤–ª–µ–Ω–Ω—ã–º. –¢–∞–∫ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç—è—Ö –í–∞—Ç–µ—Ä–ª–æ–æ, –∫–æ–≥–¥–∞ –º–Ω–æ–≥–æ–æ–±–µ—â–∞—é—â–∏–π –¥–µ–Ω—å –Ω–∞—á–∞–ª—Å—è —Å–∏–ª—å–Ω—ã–º –ª–∏–≤–Ω–µ–º, –∞ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ø–æ–ª–Ω—ã–º —Ä–∞–∑–≥—Ä–æ–º–æ–º',
'–°–∞–º—ã–π –ø–µ—Ä–≤—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –ª–æ–Ω–¥–æ–Ω—Å–∫–æ–π Times 1 –∞–≤–≥—É—Å—Ç–∞ 1861 –≥–æ–¥–∞. –ï–≥–æ –∞–≤—Ç–æ—Ä–æ–º –±—ã–ª –†–æ–±–µ—Ä—Ç –§–∏—Ü—Ä–æ–π ‚Äî –≤–∏—Ü–µ-–∞–¥–º–∏—Ä–∞–ª –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–≥–æ —Ñ–ª–æ—Ç–∞. –†–∞–Ω–µ–µ –†. –§–∏—Ü—Ä–æ–π –≤–æ–∑–≥–ª–∞–≤–ª—è–ª –Ω–∞—É—á–Ω—É—é —ç–∫—Å–ø–µ–¥–∏—Ü–∏—é –Ω–∞ –∫–æ—Ä–∞–±–ª–µ ¬´–ë–∏–≥–ª—å¬ª —Å —É—á–∞—Å—Ç–∏–µ–º –ß. –î–∞—Ä–≤–∏–Ω–∞',
'–õ–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å –Ω–µ –¥–∞–ª –ø—É–±–ª–∏–∫–µ —É—Å–ª—ã—à–∞—Ç—å –ª—É—á—à—É—é —Ä–µ—á—å –ë–µ—Ä–Ω–∞—Ä–¥–∞ –®–æ—É, –∫–∞–∫ —Å—á–∏—Ç–∞–ª –æ–Ω —Å–∞–º. –ü–∏—Å–∞—Ç–µ–ª—å –ø—Ä–æ–∏–∑–Ω–µ—Å –µ–µ –≤ –ì–∞–π–¥-–ø–∞—Ä–∫–µ –≤—Å–µ–≥–æ –¥–ª—è —Å–µ–º–∏ —á–µ–ª–æ–≤–µ–∫: –æ–¥–∏–Ω –±—ã–ª —Å–µ–∫—Ä–µ—Ç–∞—Ä–µ–º –æ–±—â–µ—Å—Ç–≤–∞, –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –®–æ—É –Ω–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —à–µ—Å—Ç—å ‚Äî –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ö—Ä–∞–Ω—è–ª–∏ –ø–æ—Ä—è–¥–æ–∫',
'–ù–µ—Ä–µ–¥–∫–æ –∫–∞–ø—Ä–∏–∑—ã –ø–æ–≥–æ–¥—ã –æ–∫–∞–∑—ã–≤–∞–ª–∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –º–æ–¥—É. –¢–∞–∫, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∫–æ—Ä–æ–ª—å –≠–¥—É–∞—Ä–¥ VII, —Å—ã–Ω –∫–æ—Ä–æ–ª–µ–≤—ã –í–∏–∫—Ç–æ—Ä–∏–∏, –æ–¥–Ω–∞–∂–¥—ã –≤–æ –≤—Ä–µ–º—è –¥–æ–∂–¥—è –∑–∞–∫–∞—Ç–∞–ª –±—Ä—é–∫–∏. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤ –º–æ–¥—É –≤–æ—à–ª–∏ –º–∞–Ω–∂–µ—Ç—ã',
'–°–∞–º—ã–π –ø–µ—Ä–≤—ã–π —Ç–µ–ª–µ–≤–∏–∑–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω –Ω–∞ —Ç–µ–ª–µ–∫–∞–Ω–∞–ª–µ BBC –≤ –ê–Ω–≥–ª–∏–∏ 11 –Ω–æ—è–±—Ä—è 1936 –≥–æ–¥–∞',
'–ú–Ω–æ–≥–∏–µ –≤–∏–¥–µ–ª–∏ —Ö—Ä–æ–Ω–∏–∫—É, –∫–æ–≥–¥–∞ –ø–æ–¥ –±–∞—Ä–∞–±–∞–Ω–Ω—É—é –¥—Ä–æ–±—å —Ñ–∞—à–∏—Å—Ç—Å–∫–∏–µ —Ñ–ª–∞–≥–∏ –±—Ä–æ—Å–∞–ª–∏ –∫ –ø–æ–¥–Ω–æ–∂—å—é –ú–∞–≤–∑–æ–ª–µ—è. –ù–æ –Ω–µ –º–Ω–æ–≥–∏–µ –∑–Ω–∞—é—Ç, —á—Ç–æ —ç—Ç–æ–º—É —á—É—Ç—å –Ω–µ –ø–æ–º–µ—à–∞–ª–∞ –ø–æ–≥–æ–¥–∞. –ü–æ—à–µ–ª –¥–æ–∂–¥—å, –∏ –∫–æ–∂–∞ –±–∞—Ä–∞–±–∞–Ω–æ–≤ –Ω–∞–º–æ–∫–ª–∞ ‚Äî –¥—Ä–æ–±–∏ –Ω–µ –±—ã–ª–æ! –í –ì–£–ú–µ —É—Å—Ç—Ä–æ–∏–ª–∏ –ø–µ—á–∏: –æ–¥–Ω–∏ –±–∞—Ä–∞–±–∞–Ω—ã —Å—É—à–∏–ª–∏—Å—å, –∞ –≤ –¥—Ä—É–≥–∏–µ ‚Äî –±–∏–ª–∏',
'–í –ü–æ—Ä—Ç—É–≥–∞–ª–∏–∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π –Ω–µ—è–≤–∫–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–Ω–∞—Å—Ç–Ω–∞—è –ø–æ–≥–æ–¥–∞',
'–í –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –ø–æ–≥–æ–¥–æ–π –ø–æ—è–≤–∏–ª–∏—Å—å —Ä–∞–∑–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ —à–∫–∞–ª—ã. –ù–∞–∏–±–æ–ª—å—à–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–∞ —à–∫–∞–ª–∞ –¶–µ–ª—å—Å–∏—è, –≥–¥–µ –∑–∞ 0 –ø—Ä–∏–Ω—è—Ç–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞–º–µ—Ä–∑–∞–Ω–∏—è –≤–æ–¥—ã. –û–¥–Ω–∞–∫–æ –≤ –°–µ–≤–µ—Ä–Ω–æ–π –ê–º–µ—Ä–∏–∫–µ –ø—Ä–∏–∂–∏–ª–∞—Å—å —à–∫–∞–ª–∞ –§–∞—Ä–µ–Ω–≥–µ–π—Ç–∞. –õ—é–±–æ–ø—ã—Ç–Ω–æ, —á—Ç–æ –≤ –æ–¥–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –æ–±–µ —à–∫–∞–ª—ã –≤—Å–µ-—Ç–∞–∫–∏ —Å—Ö–æ–¥—è—Ç—Å—è. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚àí40 –ø–æ –¶–µ–ª—å—Å–∏—é —Ç–æ—á–Ω–æ —Ä–∞–≤–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ ‚àí40 –ø–æ –§–∞—Ä–µ–Ω–≥–µ–π—Ç—É',
'–î–ª—è –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–æ–≤ —Å–∞–º—ã–π —Ö–æ—Ä–æ—à–∏–π –∞–Ω—Ç–∏—Ü–∏–∫–ª–æ–Ω —Ö—É–∂–µ —Å–∞–º–æ–≥–æ –ø–ª–æ—Ö–æ–≥–æ —Ü–∏–∫–ª–æ–Ω–∞',
'–ò–∑ –≤—Å–µ—Ö –Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø—Ä–∏–º–µ—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø—Ä–∞–≤–¥—ã–≤–∞—é—Ç—Å—è –∫—Ä–µ—â–µ–Ω—Å–∫–∏–µ –º–æ—Ä–æ–∑—ã –∏ —á–µ—Ä–µ–º—É—Ö–æ–≤—ã–µ —Ö–æ–ª–æ–¥–∞',
'1 –º–º –æ—Å–∞–¥–∫–æ–≤ ‚Äî —ç—Ç–æ 1 –ª–∏—Ç—Ä –≤–æ–¥—ã –Ω–∞ –ø–ª–æ—â–∞–¥–∏ 1 –∫–≤. –º.',
'–û–¥–Ω–æ –∏–∑ —Å–∞–º—ã—Ö —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –º–µ—Å—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –ó–µ–º–ª—è ‚Äî —ç—Ç–æ –ú–µ—Ä—Ç–≤–æ–µ –º–æ—Ä–µ. –ó–¥–µ—Å—å –æ–∫–æ–ª–æ 330 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –¥–Ω–µ–π –≤ –≥–æ–¥—É! –°–∏–Ω–æ–ø—Ç–∏–∫–∏ —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –æ—Å–æ–±–æ –Ω–µ –ø–∞—Ä—è—Ç—Å—è. –ó–∞—Ç–æ –ø–∞—Ä—è—Ç—Å—è –æ—Ç–¥—ã—Ö–∞—é—â–∏–µ',
'–ú–µ–Ω—å—à–µ –≤—Å–µ–≥–æ —Å–æ–ª–Ω—Ü–∞ –Ω–∞ –∞—Ä—Ö–∏–ø–µ–ª–∞–≥–µ –°–µ–≤–µ—Ä–Ω–∞—è –ó–µ–º–ª—è. –¢–∞–º —Å–æ–ª–Ω—Ü–µ —Å–≤–µ—Ç–∏—Ç –≤—Å–µ–≥–æ 12 –¥–Ω–µ–π –≤ –≥–æ–¥—É'
'–í —Å—Ä–µ–¥–Ω–∏—Ö —à–∏—Ä–æ—Ç–∞—Ö –ø–æ–≥–æ–¥–∞ –æ–±–ª–∞–¥–∞–µ—Ç –±–æ–ª—å—à–æ–π –∏–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å—é. –û–Ω–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫—É —Ä–∞–∑ –≤ –¥–µ–Ω—å. –° —ç—Ç–∏–º —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–∫–æ–º—ã –≤ –°–®–ê. –í —Å–≤–æ–µ –≤—Ä–µ–º—è –ú–∞—Ä–∫ –¢–≤–µ–Ω —Å–∫–∞–∑–∞–ª: ¬´–ï—Å–ª–∏ –≤–∞–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø–æ–≥–æ–¥–∞ –≤ –ù–æ–≤–æ–π –ê–Ω–≥–ª–∏–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç¬ª. –ó–∞—Ç–æ –∫–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è! –°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ, –µ—Å–ª–∏ –±—ã –ø–æ–≥–æ–¥–∞ –Ω–µ –º–µ–Ω—è–ª–∞—Å—å, —Ç–æ –¥–µ–≤—è—Ç—å –∏–∑ –¥–µ—Å—è—Ç–∏ —á–µ–ª–æ–≤–µ–∫, –Ω–∏–∫–æ–≥–¥–∞ –±—ã –Ω–µ –Ω–∞—á–∞–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞. –î–∞, —Å–Ω–µ–≥, –¥–æ–∂–¥—å –∏ –≤–µ—Ç–µ—Ä, –Ω–µ –≤—Å–µ–≥–¥–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—à–∏–º –∂–µ–ª–∞–Ω–∏—è–º, –∏ –∑–∞ —ç—Ç–æ –ø–æ–≥–æ–¥—É —á–∞—Å—Ç–æ —Ä—É–≥–∞—é—Ç. –ù–æ –≤–æ—Ç, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞ —ç—Ç–æ—Ç —Å—á–µ—Ç –º—É–¥—Ä—ã–µ —à–æ—Ç–ª–∞–Ω–¥—Ü—ã: ¬´–ù–µ –±—ã–≤–∞–µ—Ç –ø–ª–æ—Ö–æ–π –ø–æ–≥–æ–¥—ã, –±—ã–≤–∞–µ—Ç –ø–ª–æ—Ö–∞—è –æ–¥–µ–∂–¥–∞!¬ª',
'–í 17 –≤–µ–∫–µ –≤ –ê–Ω–≥–ª–∏–∏ –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–æ–Ω –æ —Å–º–µ—Ä—Ç–Ω–æ–π –∫–∞–∑–Ω–∏ —Å–∏–Ω–æ–ø—Ç–∏–∫–∞ –∑–∞ –µ–≥–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ, –ø–æ—Å–ª–µ —á–µ–≥–æ –∂–µ–ª–∞—é—â–∏—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å',
'–í –†–æ—Å—Å–∏–∏ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –µ—â–µ –±–æ–ª–µ–µ –∂–µ—Å—Ç–∫–∏–µ. –ù–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ ‚Äî —Å–∞–º–∞—è —Ö–æ–ª–æ–¥–Ω–∞—è –≤ –º–∏—Ä–µ. –°–æ —Å—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π ‚àí5 –ø–æ —Å—É—Ä–æ–≤–æ—Å—Ç–∏ –∫–ª–∏–º–∞—Ç–∞ –æ–Ω–∞ –æ–ø–µ—Ä–µ–∂–∞–µ—Ç –§–∏–Ω–ª—è–Ω–¥–∏—é –∏ –ö–∞–Ω–∞–¥—É. –í —Ç–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –±–µ–∑ —à—É—Ç–æ–∫ –Ω–µ –≤—ã–∂–∏—Ç—å: ¬´–í—Å–µ —Ç–∞–∫ –∂–∞–ª—É—é—Ç—Å—è –Ω–∞ –ø–æ–≥–æ–¥—É. –ö–∞–∫ –±—É–¥—Ç–æ, –∫—Ä–æ–º–µ –ø–æ–≥–æ–¥—ã, —É –Ω–∞—Å –≤—Å–µ —Ö–æ—Ä–æ—à–æ¬ª',
'–í –ì–∏–¥—Ä–æ–º–µ—Ç—Ü–µ–Ω—Ç—Ä–µ —É –∫–∞–∂–¥–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–µ—Ç—Å—è —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. ¬´–û–∂–∏–¥–∞–µ—Ç—Å—è –¥–æ–∂–¥—å¬ª –∑–Ω–∞—á–∏—Ç —Ç–æ, —á—Ç–æ –æ–Ω –∏–¥–µ—Ç –Ω–µ –º–µ–Ω–µ–µ 12 —á, ¬´–∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å¬ª ‚Äì –Ω–µ –±–æ–ª–µ–µ 3 —á–∞—Å–æ–≤, ¬´–±–µ–∑ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Å–∞–¥–∫–æ–≤¬ª –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ—Å–∞–¥–∫–∏ –≤—ã–ø–∞–¥—É—Ç –Ω–µ –±–æ–ª—å—à–µ 0,3 –ª –Ω–∞ –∫–≤.–º',
'–ù–µ–¥–∞–≤–Ω–æ –∏–∑–æ–±—Ä–µ–ª–∏ –∑–æ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–µ–º—Å—è –¥–æ–∂–¥–µ. –ü—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –æ—Å–∞–¥–∫–æ–≤ –æ–Ω —Ç–æ–∂–µ –ø–æ–≤—ã—à–∞–µ—Ç—Å—è, –∞ –≤ —Ä—É—á–∫–µ –∑–∞–∂–∏–≥–∞–µ—Ç—Å—è —Å–∏–Ω–∏–π —Å–≤–µ—Ç. –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –∏–∑ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–∞',
'–ü—Ä–∏ –ø—Ä–æ–≥–Ω–æ–∑–µ –ø–æ–≥–æ–¥—ã —Å–∏–Ω–æ–ø—Ç–∏–∫–∏ –°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ —É–∫–∞–∑—ã–≤–∞—é—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ç–∞–∫: ¬´–î–æ–∂–¥—å –±—É–¥–µ—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 7/3¬ª, –ø–æ—Å–∫–æ–ª—å–∫—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–æ–¥—è—Ç –¥–µ—Å—è—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ —Å—Ç–∞–Ω—Ü–∏–∏',
'–ù–∞ –æ–¥–Ω–æ–º –∏–∑ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–∞–π—Ç–æ–≤ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –ø–æ–≥–æ–¥—É –º–Ω–æ–≥–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ –º–∏—Ä–∞. –í —Å–ø–∏—Å–∫–µ 40 –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏ –∏ –¥–µ—Ä–µ–≤–Ω—è –ì–∞–¥—é–∫–∏–Ω–æ, –≥–¥–µ –≤—Å–µ–≥–¥–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø—Ä–æ–≥–Ω–æ–∑: ¬´–í –¥–µ—Ä–µ–≤–Ω–µ –ì–∞–¥—é–∫–∏–Ω–æ –¥–æ–∂–¥–∏‚Ä¶¬ª',
'–ö—Ä—É–ø–Ω—ã–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –æ—Ç –±–µ—Å–ø–æ–≥–æ–¥–∏—Ü—ã. –ï—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –æ—Ç–¥—ã—Ö–∞ –≤—Å–µ –≤—Ä–µ–º—è —à–µ–ª –¥–æ–∂–¥—å, —Ç–æ–≥–¥–∞ —Ç—É—Ä–∏—Å—Ç—É –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç —Å–æ–ª–∏–¥–Ω—É—é –Ω–µ—É—Å—Ç–æ–π–∫—É',
'–ñ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ —Å–∏–Ω–æ–ø—Ç–∏–∫–æ–≤ –¥–æ 27 –¥–æ–ª–ª –≤ –º–µ—Å—è—Ü, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –¥–µ—Ä–∂–∏—Ç –ø–∞—Ä–∏ —Å –º—É–∂–µ–º –Ω–∞ –¥–æ–ª–ª–∞—Ä, —á—Ç–æ –ø–æ–≥–æ–¥–∞ –Ω–µ –±—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—É',
]
facts_en = [
'The naming of hurricanes and tropical storms officially began in 1953',
'The wind doesn‚Äôt make a sound until it blows against an object',
'Average global temperature is up 0.94¬∞C (1.7¬∞F) since 1880',
'Fire whirls are tornadoes made of fire caused by wildfires',
'At any given time, on average there are about 1800 thunderstorms occurring on Earth with 100 lightning strikes per second',
'For each minute of the day, 1 billion tonnes of rain falls on the Earth',
'A molecule of water will stay in the Earth‚Äôs atmosphere for an average duration of 10-12 days',
'Every second around 100 lightning bolts strike the Earth',
'The fastest speed a falling raindrop can hit you is 18 mph',
'It was so cold in 1684 that the Thames River in England froze solid for two months',
'Mawsynram in Meghalaya, India is the wettest place on Earth with an annual rainfall of more than 11 meters',
'Highest Temperature Recorded on Earth is 56.7¬∞C (134¬∞F) at Greenland Ranch in Death Valley, California, on July 10, 1913',
'Lowest Temperature Recorded on Earth is -89.2¬∞C (-128.5¬∞F) at Vostok, Antarctica on July 21, 1983',
'A cubic mile of ordinary fog contains less than a gallon of water',
'In 1899, it was so cold that the Mississippi river froze over its entire length',
'The air located around a lightning bolt is heated to around 30,000¬∞C. This is 5 times hotter than the surface of the sun',
'The average width of a tornado‚Äôs funnel averages about 100 to 200 yards, but it may be as wide as a mile',
'Snowflakes falling at 2-4 mph can take up to 1 hour to reach the ground',
'The country most affected by tornadoes is the USA which faces on average 1200 tornadoes every year',
'Commonwealth Bay, Antarctica is the windiest place on Earth with winds of 200mph been recorded',
]

countries_ru = {'AU': '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', 'MG': '–ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä', 'AT': '–ê–≤—Å—Ç—Ä–∏—è', 'MW': '–ú–∞–ª–∞–≤–∏', 'AZ': '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω', 'MY': '–ú–∞–ª–∞–π–∑–∏—è', 'AL': '–ê–ª–±–∞–Ω–∏—è', 'ML': '–ú–∞–ª–∏', 'DZ': '–ê–ª–∂–∏—Ä', 'UM': '–ú–∞–ª. –¢–∏—Ö–æ–æ–∫. –û-–í–∞', 'AI': '–ê–Ω–≥–∏–ª—å—è', 'MV': '–ú–∞–ª—å–¥–∏–≤—ã', 'AO': '–ê–Ω–≥–æ–ª–∞', 'MT': '–ú–∞–ª—å—Ç–∞', 'AD': '–ê–Ω–¥–æ—Ä—Ä–∞', 'MP': '–ú–∞—Ä–∏–∞–Ω—Å–∫–∏–µ –û-–í–∞', 'AQ': '–ê–Ω—Ç–∞—Ä–∫—Ç–∏–∫–∞', 'MA': '–ú–∞—Ä–æ–∫–∫–æ', 'AG': '–ê–Ω—Ç–∏–≥—É–∞.–ë–∞—Ä–±', 'MQ': '–ú–∞—Ä—Ç–∏–Ω–∏–∫–∞', 'MH': '–ú–∞—Ä—à–∞–ª–ª–æ–≤—ã –û-–í–∞', 'MO': '–ê–æ–º—ã–Ω—å (–ú–∞–∫–∞–æ)', 'MX': '–ú–µ–∫—Å–∏–∫–∞', 'AR': '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞', 'FM': '–ú–∏–∫—Ä–æ–Ω–µ–∑–∏—è', 'AM': '–ê—Ä–º–µ–Ω–∏—è', 'MZ': '–ú–æ–∑–∞–º–±–∏–∫', 'AW': '–ê—Ä—É–±–∞', 'MD': '–ú–æ–ª–¥–æ–≤–∞', 'AF': '–ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω', 'MC': '–ú–æ–Ω–∞–∫–æ', 'BS': '–ë–∞–≥–∞–º—Å–∫–∏–µ –û-–í–∞', 'MN': '–ú–æ–Ω–≥–æ–ª–∏—è', 'BD': '–ë–∞–Ω–≥–ª–∞–¥–µ—à', 'MS': '–ú–æ–Ω—Ç—Å–µ—Ä—Ä–∞—Ç', 'BB': '–ë–∞—Ä–±–∞–¥–æ—Å', 'MM': '–ú—å—è–Ω–º–∞', 'BH': '–ë–∞—Ö—Ä–µ–π–Ω', 'NA': '–ù–∞–º–∏–±–∏—è', 'BZ': '–ë–µ–ª–∏–∑', 'NR': '–ù–∞—É—Ä—É', 'BY': '–ë–µ–ª–∞—Ä—É—Å—å', 'NP': '–ù–µ–ø–∞–ª', 'BE': '–ë–µ–ª—å–≥–∏—è', 'NE': '–ù–∏–≥–µ—Ä', 'BJ': '–ë–µ–Ω–∏–Ω', 'NG': '–ù–∏–≥–µ—Ä–∏—è', 'BM': '–ë–µ—Ä–º—É–¥—Å–∫–∏–µ –û-–í–∞', 'NL': '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', 'BG': '–ë–æ–ª–≥–∞—Ä–∏—è', 'NI': '–ù–∏–∫–∞—Ä–∞–≥—É–∞', 'BO': '–ë–æ–ª–∏–≤–∏—è', 'NU': '–ù–∏—É—ç', 'BW': '–ë–æ—Ç—Å–≤–∞–Ω–∞', 'NZ': '–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è', 'BR': '–ë—Ä–∞–∑–∏–ª–∏—è', 'NC': '–ù–æ–≤. –ö–∞–ª–µ–¥–æ–Ω–∏—è', 'IO': '–ë—Ä–∏—Ç. –¢–µ—Ä. –í –ò–Ω–¥. –û–∫', 'NO': '–ù–æ—Ä–≤–µ–≥–∏—è', 'BN': '–ë—Ä—É–Ω–µ–π', 'NF': '–ù–æ—Ä—Ñ–æ–ª–∫', 'BV': '–ë—É–≤–µ', 'AE': '–û–±—ä–µ–¥. –ê—Ä–∞–±. –≠–º–∏—Ä–∞—Ç', 'BF': '–ë—É—Ä–∫–∏–Ω–∞-–§–∞—Å–æ', 'OM': '–û–º–∞–Ω', 'BI': '–ë—É—Ä—É–Ω–¥–∏', 'CK': '–û-–í–∞ –ö—É–∫–∞', 'BT': '–ë—É—Ç–∞–Ω', 'VU': '–í–∞–Ω—É–∞—Ç—É', 'IM': '–û-–í –ú—ç–Ω', 'VA': '–í–∞—Ç–∏–∫–∞–Ω', 'CX': '–û-–í –†–æ–∂–¥–µ—Å—Ç–≤–∞', 'GB': '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', 'SH': '–û-–í –°–≤—è—Ç–æ–π –ï–ª–µ–Ω—ã', 'HU': '–í–µ–Ω–≥—Ä–∏—è', 'VE': '–í–µ–Ω–µ—Å—É—ç–ª–∞', 'PK': '–ü–∞–∫–∏—Å—Ç–∞–Ω', 'VI': '–í–∏—Ä–≥–∏–Ω. –û-–í–∞ (–°—à–∞)', 'PW': '–ü–∞–ª–∞—É', 'VG': '–í–∏—Ä–≥–∏–Ω. –û-–í–∞ (–ë—Ä–∏—Ç.)', 'PA': '–ü–∞–Ω–∞–º–∞', 'AS': '–í–æ—Å—Ç. –°–∞–º–æ–∞. (–°—à–∞)', 'PG': '–ü–∞–ø—É–∞-–ù–æ–≤–∞—è –ì–≤–∏–Ω–µ—è', 'PY': '–ü–∞—Ä–∞–≥–≤–∞–π', 'VN': '–í—å–µ—Ç–Ω–∞–º', 'PE': '–ü–µ—Ä—É', 'GA': '–ì–∞–±–æ–Ω', 'PN': '–ü–∏—Ç–∫—ç—Ä–Ω', 'HT': '–ì–∞–∏—Ç–∏', 'PL': '–ü–æ–ª—å—à–∞', 'GY': '–ì–∞–π–∞–Ω–∞', 'PT': '–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è', 'GM': '–ì–∞–º–±–∏—è', 'PR': '–ü—É—ç—Ä—Ç–æ-–†–∏–∫–æ', 'GH': '–ì–∞–Ω–∞', 'GP': '–ì–≤–∞–¥–µ–ª—É–ø–∞', 'RE': '–†–µ—é–Ω—å–æ–Ω', 'GT': '–ì–≤–∞—Ç–µ–º–∞–ª–∞', 'RU': '–†–æ—Å—Å–∏—è', 'GF': '–ì–≤–∏–∞–Ω–∞', 'RW': '–†—É–∞–Ω–¥–∞', 'GN': '–ì–≤–∏–Ω–µ—è', 'RO': '–†—É–º—ã–Ω–∏—è', 'GW': '–ì–≤–∏–Ω–µ—è-–ë–∏—Å–∞—É', 'SV': '–°–∞–ª—å–≤–∞–¥–æ—Ä', 'DE': '–ì–µ—Ä–º–∞–Ω–∏—è', 'SM': '–°–∞–Ω-–ú–∞—Ä–∏–Ω–æ', 'GI': '–ì–∏–±—Ä–∞–ª—Ç–∞—Ä', 'ST': '–°–∞–Ω-–¢–æ–º–µ –ò –ü—Ä–∏–Ω—Å.', 'HN': '–ì–æ–Ω–¥—É—Ä–∞—Å', 'SA': '–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è', 'GD': '–ì—Ä–µ–Ω–∞–¥–∞', 'SZ': '–°–≤–∞–∑–∏–ª–µ–Ω–¥', 'GL': '–ì—Ä–µ–Ω–ª–∞–Ω–¥–∏—è', 'SC': '–°–µ–π—à–µ–ª—å—Å–∫–∏–µ –û-–í–∞', 'GR': '–ì—Ä–µ—Ü–∏—è', 'PM': '–°.-–ü—å–µ—Ä –ò –ú–∏–∫–µ–ª–æ–Ω', 'GE': '–ì—Ä—É–∑–∏—è', 'SN': '–°–µ–Ω–µ–≥–∞–ª', 'GU': '–ì—É–∞–º', 'VC': '–°. –í–∏–Ω—Å–µ–Ω—Ç. –ì—Ä–µ–Ω–∞–¥.', 'DK': '–î–∞–Ω–∏—è', 'KN': '–°–µ–Ω—Ç-–ö–∏—Ç—Å –ò –ù–µ–≤–∏—Å', 'DJ': '–î–∂–∏–±—É—Ç–∏', 'LC': '–°–µ–Ω—Ç-–õ—é—Å–∏—è', 'SG': '–°–∏–Ω–≥–∞–ø—É—Ä', 'DM': '–î–æ–º–∏–Ω–∏–∫–∞', 'SY': '–°–∏—Ä–∏—è', 'DO': '–î–æ–º–∏–Ω–∏–∫–∞–Ω—Å–∫. –†–µ—Å–ø.', 'SK': '–°–ª–æ–≤–∞–∫–∏—è', 'EG': '–ï–≥–∏–ø–µ—Ç', 'SB': '–°–æ–ª–æ–º–æ–Ω–æ–≤—ã –û-–í–∞', 'SO': '–°–æ–º–∞–ª–∏', 'ZM': '–ó–∞–º–±–∏—è', 'SD': '–°—É–¥–∞–Ω', 'EH': '–ó–∞–ø–∞–¥–Ω–∞—è –°–∞—Ö–∞—Ä–∞', 'SR': '–°—É—Ä–∏–Ω–∞–º', 'WS': '–ó–∞–ø–∞–¥–Ω–æ–µ –°–∞–º–æ–∞', 'SL': '–°—å–µ—Ä—Ä–∞-–õ–µ–æ–Ω–µ', 'ZW': '–ó–∏–º–±–∞–±–≤–µ', 'US': '–°—à–∞', 'IL': '–ò–∑—Ä–∞–∏–ª—å', 'HK': '–°—è–Ω–≥–∞–Ω (–ì–æ–Ω–∫–æ–Ω–≥)', 'IN': '–ò–Ω–¥–∏—è', 'TJ': '–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω', 'ID': '–ò–Ω–¥–æ–Ω–µ–∑–∏—è', 'TH': '–¢–∞–∏–ª–∞–Ω–¥', 'JO': '–ò–æ—Ä–¥–∞–Ω–∏—è', 'TW': '–¢–∞–π–≤–∞–Ω—å', 'IQ': '–ò—Ä–∞–∫', 'TZ': '–¢–∞–Ω–∑–∞–Ω–∏—è', 'IR': '–ò—Ä–∞–Ω', 'TC': '–¢–µ—Ä–∫—Å –ò –ö–∞–π–∫–æ—Å', 'IE': '–ò—Ä–ª–∞–Ω–¥–∏—è', 'TG': '–¢–æ–≥–æ', 'IS': '–ò—Å–ª–∞–Ω–¥–∏—è', 'TK': '–¢–æ–∫–µ–ª–∞—É (–Æ–Ω–∏–æ–Ω)', 'ES': '–ò—Å–ø–∞–Ω–∏—è', 'TO': '–¢–æ–Ω–≥–∞', 'IT': '–ò—Ç–∞–ª–∏—è', 'YE': '–ô–µ–º–µ–Ω', 'TV': '–¢—É–≤–∞–ª—É', 'CV': '–ö–∞–±–æ-–í–µ—Ä–¥–µ', 'TN': '–¢—É–Ω–∏—Å', 'KZ': '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'TM': '–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω', 'KY': '–ö–∞–π–º–∞–Ω', 'KH': '–ö–∞–º–±–æ–¥–∂–∞', 'UG': '–£–≥–∞–Ω–¥–∞', 'CM': '–ö–∞–º–µ—Ä—É–Ω', 'UZ': '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω', 'CA': '–ö–∞–Ω–∞–¥–∞', 'UA': '–£–∫—Ä–∞–∏–Ω–∞', 'QA': '–ö–∞—Ç–∞—Ä', 'WF': '–£–æ–ª–ª–∏—Å –ò –§—É—Ç—É–Ω–∞', 'KE': '–ö–µ–Ω–∏—è', 'UY': '–£—Ä—É–≥–≤–∞–π', 'CY': '–ö–∏–ø—Ä', 'FO': '–§–∞—Ä–µ—Ä—Å–∫–∏–µ –û-–í–∞', 'KI': '–ö–∏—Ä–∏–±–∞—Ç–∏', 'FJ': '–§–∏–¥–∂–∏', 'CN': '–ö–∏—Ç–∞–π', 'PH': '–§–∏–ª–∏–ø–ø–∏–Ω—ã', 'CC': '–ö–æ–∫–æ—Å–æ–≤—ã–µ –û-–í–∞', 'FI': '–§–∏–Ω–ª—è–Ω–¥–∏—è', 'CO': '–ö–æ–ª—É–º–±–∏—è', 'FK': '–§–æ–ª–∫–ª–µ–Ω–¥—Å–∫–∏–µ –û-–í–∞', 'KM': '–ö–æ–º–æ—Ä—Å–∫–∏–µ –û-–í–∞', 'FR': '–§—Ä–∞–Ω—Ü–∏—è', 'CG': '–ö–æ–Ω–≥–æ', 'PF': '–§—Ä. –ü–æ–ª–∏–Ω–µ–∑–∏—è', 'KP': '–ö–æ—Ä–µ—è (–ö–Ω–¥—Ä)', 'TF': '–§—Ä. –Æ–∂–Ω—ã–µ –¢–µ—Ä—Ä–∏—Ç–æ—Ä.', 'KR': '–ö–æ—Ä–µ—è –†–µ—Å–ø.', 'HM': '–•–µ—Ä–¥ –ò –ú–∞–∫–¥–æ–Ω–∞–ª—å–¥', 'CR': '–ö–æ—Å—Ç–∞-–†–∏–∫–∞', 'CF': '–¶–µ–Ω—Ç—Ä. –ê—Ñ—Ä. –†–µ—Å–ø—É–±–ª', 'CI': "–ö–æ—Ç-–î'–ò–≤—É–∞—Ä", 'CU': '–ö—É–±–∞', 'CZ': '–ß–µ—à—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞', 'KW': '–ö—É–≤–µ–π—Ç', 'CL': '–ß–∏–ª–∏', 'KG': '–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω', 'CH': '–®–≤–µ–π—Ü–∞—Ä–∏—è', 'LA': '–õ–∞–æ—Å', 'SE': '–®–≤–µ—Ü–∏—è', 'LV': '–õ–∞—Ç–≤–∏—è', 'SJ': '–®–ø–∏—Ü–±–µ—Ä–≥–µ–Ω –ò –Ø–Ω-–ú–∞–π–µ', 'LT': '–õ–∏—Ç–≤–∞', 'LK': '–®—Ä–∏-–õ–∞–Ω–∫–∞', 'LS': '–õ–µ—Å–æ—Ç–æ', 'EC': '–≠–∫–≤–∞–¥–æ—Ä', 'LR': '–õ–∏–±–µ—Ä–∏—è', 'GQ': '–≠–∫–≤–∞—Ç–æ—Ä. –ì–≤–∏–Ω–µ—è', 'LB': '–õ–∏–≤–∞–Ω', 'EE': '–≠—Å—Ç–æ–Ω–∏—è', 'LY': '–õ–∏–≤–∏—è', 'ET': '–≠—Ñ–∏–æ–ø–∏—è', 'LI': '–õ–∏—Ö—Ç–µ–Ω—à—Ç–µ–π–Ω', 'LU': '–õ—é–∫—Å–µ–º–±—É—Ä–≥', 'ZA': '–Æ–∂–Ω–æ-–ê—Ñ—Ä. –†–µ—Å–ø—É–±.', 'MU': '–ú–∞–≤—Ä–∏–∫–∏–π', 'JM': '–Ø–º–∞–π–∫–∞', 'MR': '–ú–∞–≤—Ä–∏—Ç–∞–Ω–∏—è', 'JP': '–Ø–ø–æ–Ω–∏—è', 'TR': '–¢—É—Ä—Ü–∏—è', 'TD': '–ß–∞–¥', 'TT': '–¢—Ä–∏–Ω–∏–¥–∞–¥ –ò –¢–æ–±–∞–≥–æ'}
countries_en = {'AF': 'Afghanistan', 'AL': 'Albania', 'DZ': 'Algeria', 'AS': 'American Samoa', 'AD': 'Andorra', 'AO': 'Angola', 'AI': 'Anguilla', 'AQ': 'Antarctica', 'AG': 'Antigua and Barbuda', 'AR': 'Argentina', 'AM': 'Armenia', 'AW': 'Aruba', 'AU': 'Australia', 'AT': 'Austria', 'AZ': 'Azerbaijan', 'BS': 'Bahamas', 'BH': 'Bahrain', 'BD': 'Bangladesh', 'BB': 'Barbados', 'BY': 'Belarus', 'BE': 'Belgium', 'BZ': 'Belize', 'BJ': 'Benin', 'BM': 'Bermuda', 'BT': 'Bhutan', 'BO': 'Bolivia (Plurinational State of)', 'BW': 'Botswana', 'BV': 'Bouvet Island', 'BR': 'Brazil', 'IO': 'British Indian Ocean Territory', 'BN': 'Brunei Darussalam', 'BG': 'Bulgaria', 'BF': 'Burkina Faso', 'BI': 'Burundi', 'CV': 'Cabo Verde', 'KH': 'Cambodia', 'CM': 'Cameroon', 'CA': 'Canada', 'KY': 'Cayman Islands', 'CF': 'Central African Republic', 'TD': 'Chad', 'CL': 'Chile', 'CN': 'China', 'CX': 'Christmas Island', 'CC': 'Cocos (Keeling) Islands', 'CO': 'Colombia', 'KM': 'Comoros', 'CG': 'Congo', 'CK': 'Cook Islands', 'CR': 'Costa Rica', 'CU': 'Cuba', 'CY': 'Cyprus', 'CZ': 'Czechia', 'CI': "C√¥te d'Ivoire", 'DK': 'Denmark', 'DJ': 'Djibouti', 'DM': 'Dominica', 'DO': 'Dominican Republic', 'EC': 'Ecuador', 'EG': 'Egypt', 'SV': 'El Salvador', 'GQ': 'Equatorial Guinea', 'EE': 'Estonia', 'SZ': 'Eswatini', 'ET': 'Ethiopia', 'FK': 'Falkland Islands (the) [Malvinas]', 'FO': 'Faroe Islands', 'FJ': 'Fiji', 'FI': 'Finland', 'FR': 'France', 'GF': 'French Guiana', 'PF': 'French Polynesia', 'TF': 'French Southern Territories', 'GA': 'Gabon', 'GM': 'Gambia', 'GE': 'Georgia', 'DE': 'Germany', 'GH': 'Ghana', 'GI': 'Gibraltar', 'GR': 'Greece', 'GL': 'Greenland', 'GD': 'Grenada', 'GP': 'Guadeloupe', 'GU': 'Guam', 'GT': 'Guatemala', 'GN': 'Guinea', 'GW': 'Guinea-Bissau', 'GY': 'Guyana', 'HT': 'Haiti', 'HM': 'Heard Island and McDonald Islands', 'VA': 'Holy See', 'HN': 'Honduras', 'HK': 'Hong Kong', 'HU': 'Hungary', 'IS': 'Iceland', 'IN': 'India', 'ID': 'Indonesia', 'IR': 'Iran (Islamic Republic of)', 'IQ': 'Iraq', 'IE': 'Ireland', 'IM': 'Isle of Man', 'IL': 'Israel', 'IT': 'Italy', 'JM': 'Jamaica', 'JP': 'Japan', 'JO': 'Jordan', 'KZ': 'Kazakhstan', 'KE': 'Kenya', 'KI': 'Kiribati', 'KP': "Korea (the Democratic People's Republic of)", 'KR': 'Korea (the Republic of)', 'KW': 'Kuwait', 'KG': 'Kyrgyzstan', 'LA': "Lao People's Democratic Republic", 'LV': 'Latvia', 'LB': 'Lebanon', 'LS': 'Lesotho', 'LR': 'Liberia', 'LY': 'Libya', 'LI': 'Liechtenstein', 'LT': 'Lithuania', 'LU': 'Luxembourg', 'MO': 'Macao', 'MG': 'Madagascar', 'MW': 'Malawi', 'MY': 'Malaysia', 'MV': 'Maldives', 'ML': 'Mali', 'MT': 'Malta', 'MH': 'Marshall Islands', 'MQ': 'Martinique', 'MR': 'Mauritania', 'MU': 'Mauritius', 'MX': 'Mexico', 'FM': 'Micronesia (Federated States of)', 'MD': 'Moldova (the Republic of)', 'MC': 'Monaco', 'MN': 'Mongolia', 'MS': 'Montserrat', 'MA': 'Morocco', 'MZ': 'Mozambique', 'MM': 'Myanmar', 'NA': 'Namibia', 'NR': 'Nauru', 'NP': 'Nepal', 'NL': 'Netherlands', 'NC': 'New Caledonia', 'NZ': 'New Zealand', 'NI': 'Nicaragua', 'NE': 'Niger', 'NG': 'Nigeria', 'NU': 'Niue', 'NF': 'Norfolk Island', 'MP': 'Northern Mariana Islands', 'NO': 'Norway', 'OM': 'Oman', 'PK': 'Pakistan', 'PW': 'Palau', 'PA': 'Panama', 'PG': 'Papua New Guinea', 'PY': 'Paraguay', 'PE': 'Peru', 'PH': 'Philippines', 'PN': 'Pitcairn', 'PL': 'Poland', 'PT': 'Portugal', 'PR': 'Puerto Rico', 'QA': 'Qatar', 'RO': 'Romania', 'RU': 'Russian Federation', 'RW': 'Rwanda', 'RE': 'R√©union', 'SH': 'Saint Helena, Ascension and Tristan da Cunha', 'KN': 'Saint Kitts and Nevis', 'LC': 'Saint Lucia', 'PM': 'Saint Pierre and Miquelon', 'VC': 'Saint Vincent and the Grenadines', 'WS': 'Samoa', 'SM': 'San Marino', 'ST': 'Sao Tome and Principe', 'SA': 'Saudi Arabia', 'SN': 'Senegal', 'SC': 'Seychelles', 'SL': 'Sierra Leone', 'SG': 'Singapore', 'SK': 'Slovakia', 'SB': 'Solomon Islands', 'SO': 'Somalia', 'ZA': 'South Africa', 'ES': 'Spain', 'LK': 'Sri Lanka', 'SD': 'Sudan', 'SR': 'Suriname', 'SJ': 'Svalbard and Jan Mayen', 'SE': 'Sweden', 'CH': 'Switzerland', 'SY': 'Syrian Arab Republic', 'TW': 'Taiwan (Province of China)', 'TJ': 'Tajikistan', 'TZ': 'Tanzania, United Republic of', 'TH': 'Thailand', 'TG': 'Togo', 'TK': 'Tokelau', 'TO': 'Tonga', 'TT': 'Trinidad and Tobago', 'TN': 'Tunisia', 'TR': 'Turkey', 'TM': 'Turkmenistan', 'TC': 'Turks and Caicos Islands', 'TV': 'Tuvalu', 'UG': 'Uganda', 'UA': 'Ukraine', 'AE': 'United Arab Emirates', 'GB': 'United Kingdom of Great Britain and Northern Ireland', 'UM': 'United States Minor Outlying Islands', 'US': 'United States of America', 'UY': 'Uruguay', 'UZ': 'Uzbekistan', 'VU': 'Vanuatu', 'VE': 'Venezuela (Bolivarian Republic of)', 'VN': 'Viet Nam', 'VG': 'Virgin Islands (British)', 'VI': 'Virgin Islands (U.S.)', 'WF': 'Wallis and Futuna', 'EH': 'Western Sahara', 'YE': 'Yemen', 'ZM': 'Zambia', 'ZW': 'Zimbabwe'}

def get_weather(city, lang):
    try:
        response = requests.get("http://api.openweathermap.org/data/2.5/find",
                 params={'q': '%s' %city, 'type': 'like', 'units': 'metric', 'APPID': app_id, 'lang': lang})
        response.raise_for_status()
        cities = [('%s (%s)' %(i['name'], (countries_ru if lang == 'ru' else countries_en)[i['sys']['country']]), i['id']) for i in response.json()['list']]
        responses = [requests.get("http://api.openweathermap.org/data/2.5/forecast",
                 params={'id': '%s' %i[1], 'type': 'like', 'units': 'metric', 'APPID': app_id, 'lang': lang}) for i in cities]
        for i in responses:
            i.raise_for_status()
        weather_data = [(i1[0], i2.json()) for i1, i2 in zip(cities, responses)]
    except requests.exceptions.HTTPError:
        return []
    return weather_data

def get_language(chat_id):
    database = sqlite3.connect("database.db")
    cur = database.cursor()
    cur.execute('select * from user_data where chat_id=%s;'%chat_id)
    data = cur.fetchone()
    database.close()
    if data:
        return data[1]
    return 'ru'

def set_language(chat_id, lang):
    database = sqlite3.connect("database.db")
    try:
        database.execute('insert into user_data (chat_id, lang) values (%s, "%s")' %(chat_id, lang))
    except:
        database.execute('update user_data set lang="%s" where chat_id=%s' %(lang, chat_id))
    database.commit()
    database.close()

def start(update: Update, context: CallbackContext):
    lang = get_language(update.effective_chat.id)
    if lang == 'ru':
        bot.send_message(chat_id=update.effective_chat.id, text='''
–ü—Ä–∏–≤–µ—Ç!
–Ø - –Ω–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
–Ø –ø–æ–∫–∞–∂—É –≤–∞–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
''')
    else:
        bot.send_message(chat_id=update.effective_chat.id, text='''
Hi!
I'm a new bot for simple and high-quality weather determination
Just input the location where you need to determine the weather
I'll show you weather forecast for soon
''')

def lang(update: Update, context: CallbackContext):
    button_list = [[InlineKeyboardButton("–†—É—Å—Å–∫–∏–πüá∑üá∫", callback_data="language_ru"),
    InlineKeyboardButton("Englishüá¨üáß", callback_data="language_en")]]
    bot.send_message(chat_id=update.effective_chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —è–∑—ã–∫/Choose your language", reply_markup=InlineKeyboardMarkup(button_list))

def language_ru(update: Update, context: CallbackContext):
    set_language(update.effective_chat.id, 'ru')
    bot.send_message(chat_id=update.effective_chat.id, text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def language_en(update: Update, context: CallbackContext):
    set_language(update.effective_chat.id, 'en')
    bot.send_message(chat_id=update.effective_chat.id, text="English has changed successfully")

def show_fact(update: Update, context: CallbackContext):
    lang = get_language(update.effective_chat.id)
    button_list = [[InlineKeyboardButton(("–ï—â—ëüòé" if lang == 'ru' else "Show moreüòé"), callback_data="show_fact")]]
    bot.send_message(chat_id=update.effective_chat.id, text=("–ê –≤—ã –∑–Ω–∞–ª–∏, —á—Ç–æ...\n%s" %facts_ru[randrange(len(facts_ru))] if lang == 'ru' else "Did you know...\n%s" %facts_en[randrange(len(facts_en))]), reply_markup=InlineKeyboardMarkup(button_list))

def show_help(update: Update, context: CallbackContext):
    lang = get_language(update.effective_chat.id)
    if lang == 'ru':
        bot.send_message(chat_id=update.effective_chat.id, text='''
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/lang - –í—ã–±–æ—Ä —è–∑—ã–∫–∞
/ru - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
/en - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∏–∫–π —è–∑—ã–∫
/fact - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
''')
    else:
        bot.send_message(chat_id=update.effective_chat.id, text='''
/start - Launch the bot
/lang - Choose the language
/ru - Change Russian language
/en - Change English language
/fact - Show an intresting fact
/help - Show a list of commands
''')

def button(update: Update, context: CallbackContext):
    lang = get_language(update.effective_chat.id)
    query = update.callback_query
    variant = query.data
    query.answer()
    if variant == 'language_ru':
        language_ru(update, context)
    if variant == 'language_en':
        language_en(update, context)
    if variant == 'show_fact':
        show_fact(update, context)

def start_weather(update: Update, context: CallbackContext):
    lang = get_language(update.effective_chat.id)    
    city = update.message.text.title()
    weather_datas = get_weather(city, lang)
    if not weather_datas:
        button_list = [[InlineKeyboardButton(("–•–æ—á—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—ÇüòÅ" if lang == 'ru' else "I want to know an interesting factüòÅ"), callback_data="show_fact")]]
        bot.send_message(chat_id=update.effective_chat.id, text=("–ù–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç *%s* –Ω–µ –Ω–∞–π–¥–µ–Ωü§®" if lang == 'ru' else "Location *%s* not foundü§®") %city, parse_mode='markdown', reply_markup=InlineKeyboardMarkup(button_list))
    else:
      for weather_data in weather_datas:
        button_list = [[InlineKeyboardButton(("–•–æ—á—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—ÇüòÅ" if lang == 'ru' else "I want to know an interesting factüòÅ"), callback_data="show_fact")]]
        city = weather_data[0]
        time_add = weather_data[1]['city']['timezone'] // 3600
        w = weather_data[1]['list']
        t = time.gmtime()
        #bot.send_location(chat_id=update.effective_chat.id, latitude=weather_data['city']['coord']['lat'], longitude=weather_data['city']['coord']['lon'], horizontal_accuracy=1500) 
        bot.send_message(chat_id=update.effective_chat.id, text=("–ü–æ–≥–æ–¥–∞ –≤ *%s*\n–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (UTC+%s) %02d:%02d" if lang == 'ru' else "Weather in *%s*\nTimezone (UTC+%s) %02d:%02d") %(city, time_add, (t.tm_hour + time_add) % 24, t.tm_min), parse_mode='markdown')
        day = (time.time() // 3600 + time_add) // 24
        text = ''
        for i in range(len(w)):
            date, main, weather = w[i]['dt'], w[i]['main'], w[i]['weather']
            if (date // 3600 + time_add) // 24 != day:
                break
            t = time.gmtime(date + time_add * 3600)
            text = text + ("%02d:00: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ %+.1f C¬∞ (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ %+.1f –°¬∞), %s%s\n" if lang == 'ru' else "%02d:00: Temperature %+.1f C¬∞ (feels like %+.1f –°¬∞), %s%s\n") %(t.tm_hour, main['temp'], main['feels_like'], weather[0]['description'], weather_smiles[weather[0]['icon'][:2]])
        if text:
            bot.send_message(chat_id=update.effective_chat.id, text=('*–°–µ–≥–æ–¥–Ω—è*:\n%s' if lang == 'ru' else '*Today*:\n%s') %text, parse_mode='markdown')
        text = ''
        for i in range(i, len(w)):
            date, main, weather = w[i]['dt'], w[i]['main'], w[i]['weather']
            if (date // 3600 + time_add) // 24 != day + 1:
                break 
            t = time.gmtime(date + time_add * 3600)
            text = text + ("%02d:00: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ %+.1f C¬∞ (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ %+.1f –°¬∞), %s%s\n" if lang == 'ru' else "%02d:00: Temperature %+.1f C¬∞ (feels like %+.1f –°¬∞), %s%s\n") %(t.tm_hour, main['temp'], main['feels_like'], weather[0]['description'], weather_smiles[weather[0]['icon'][:2]])
        if text:
            bot.send_message(chat_id=update.effective_chat.id, text=('*–ó–∞–≤—Ç—Ä–∞*:\n%s' if lang == 'ru' else '*Tomorrow*:\n%s') %text, parse_mode='markdown')
        text = ''
        for i in range(i, len(w)):
            date, main, weather = w[i]['dt'], w[i]['main'], w[i]['weather']
            if (date // 3600 + time_add) // 24 != day + 2:
                break 
            t = time.gmtime(date + time_add * 3600)
            text = text + ("%02d:00: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ %+.1f C¬∞ (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ %+.1f –°¬∞), %s%s\n" if lang == 'ru' else "%02d:00: Temperature %+.1f C¬∞ (feels like %+.1f –°¬∞), %s%s\n") %(t.tm_hour, main['temp'], main['feels_like'], weather[0]['description'], weather_smiles[weather[0]['icon'][:2]])
        if text:
            bot.send_message(chat_id=update.effective_chat.id, text=('*–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞*:\n%s' if lang == 'ru' else '*Day after tomorrow*:\n%s') %text, parse_mode='markdown', reply_markup=InlineKeyboardMarkup(button_list))
updater.dispatcher.add_handler(CommandHandler('start', start))
updater.dispatcher.add_handler(CommandHandler('lang', lang))
updater.dispatcher.add_handler(CommandHandler('ru', language_ru))
updater.dispatcher.add_handler(CommandHandler('en', language_en))
updater.dispatcher.add_handler(CommandHandler('fact', show_fact))
updater.dispatcher.add_handler(CommandHandler('help', show_help))
updater.dispatcher.add_handler(MessageHandler(Filters.text & (~Filters.command), start_weather))
updater.dispatcher.add_handler(CallbackQueryHandler(button))

updater.start_polling()
